{"version":3,"file":"static/js/788.93d49efb.chunk.js","mappings":"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","sources":["../node_modules/dom-helpers/esm/canUseDOM.js","../node_modules/dom-helpers/esm/addEventListener.js","../node_modules/dom-helpers/esm/ownerDocument.js","../node_modules/dom-helpers/esm/removeEventListener.js","../node_modules/dom-helpers/esm/scrollbarSize.js","../node_modules/@restart/hooks/esm/useCommittedRef.js","../node_modules/@restart/hooks/esm/useEventCallback.js","../node_modules/@restart/hooks/esm/useMergedRefs.js","../node_modules/@restart/hooks/esm/useWillUnmount.js","../node_modules/@restart/hooks/esm/useUpdatedRef.js","../node_modules/dom-helpers/esm/getComputedStyle.js","../node_modules/dom-helpers/esm/ownerWindow.js","../node_modules/dom-helpers/esm/hyphenate.js","../node_modules/dom-helpers/esm/hyphenateStyle.js","../node_modules/dom-helpers/esm/isTransform.js","../node_modules/dom-helpers/esm/css.js","../node_modules/dom-helpers/esm/listen.js","../node_modules/dom-helpers/esm/transitionEnd.js","../node_modules/dom-helpers/esm/triggerEvent.js","../node_modules/dom-helpers/esm/activeElement.js","../node_modules/dom-helpers/esm/contains.js","../node_modules/@restart/ui/esm/ModalManager.js","../node_modules/@restart/ui/esm/DataKey.js","../node_modules/@restart/ui/esm/getScrollbarWidth.js","../node_modules/@restart/ui/esm/useWindow.js","../node_modules/@restart/ui/esm/useWaitForDOMRef.js","../node_modules/@restart/hooks/esm/useIsomorphicEffect.js","../node_modules/@restart/ui/esm/NoopTransition.js","../node_modules/@restart/ui/esm/ImperativeTransition.js","../node_modules/@restart/ui/esm/Modal.js","../node_modules/@restart/hooks/esm/useMounted.js","../node_modules/@restart/hooks/esm/usePrevious.js","../node_modules/@restart/ui/esm/utils.js","../node_modules/dom-helpers/esm/querySelectorAll.js","../node_modules/dom-helpers/esm/removeClass.js","../node_modules/react-bootstrap/esm/BootstrapModalManager.js","../node_modules/dom-helpers/esm/addClass.js","../node_modules/dom-helpers/esm/hasClass.js","../node_modules/react-bootstrap/esm/transitionEndListener.js","../node_modules/react-bootstrap/esm/TransitionWrapper.js","../node_modules/react-bootstrap/esm/safeFindDOMNode.js","../node_modules/react-bootstrap/esm/Fade.js","../node_modules/react-bootstrap/esm/triggerBrowserReflow.js","../node_modules/react-bootstrap/esm/ModalBody.js","../node_modules/react-bootstrap/esm/ModalContext.js","../node_modules/react-bootstrap/esm/ModalDialog.js","../node_modules/react-bootstrap/esm/ModalFooter.js","../node_modules/react-bootstrap/esm/CloseButton.js","../node_modules/react-bootstrap/esm/AbstractModalHeader.js","../node_modules/react-bootstrap/esm/ModalHeader.js","../node_modules/react-bootstrap/esm/divWithClassName.js","../node_modules/react-bootstrap/esm/ModalTitle.js","../node_modules/react-bootstrap/esm/Modal.js","../node_modules/@restart/hooks/esm/useCallbackRef.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/ol/console.js","../node_modules/ol/coordinate.js","../node_modules/ol/extent/Relationship.js","../node_modules/ol/extent.js","../node_modules/ol/math.js","../node_modules/ol/proj/Units.js","../node_modules/ol/proj/Projection.js","../node_modules/ol/proj/epsg3857.js","../node_modules/ol/proj/epsg4326.js","../node_modules/ol/proj/projections.js","../node_modules/ol/proj/transforms.js","../node_modules/ol/sphere.js","../node_modules/ol/proj.js"],"sourcesContent":["export default !!(typeof window !== 'undefined' && window.document && window.document.createElement);","/* eslint-disable no-return-assign */\nimport canUseDOM from './canUseDOM';\nexport var optionsSupported = false;\nexport var onceSupported = false;\n\ntry {\n  var options = {\n    get passive() {\n      return optionsSupported = true;\n    },\n\n    get once() {\n      // eslint-disable-next-line no-multi-assign\n      return onceSupported = optionsSupported = true;\n    }\n\n  };\n\n  if (canUseDOM) {\n    window.addEventListener('test', options, options);\n    window.removeEventListener('test', options, true);\n  }\n} catch (e) {\n  /* */\n}\n\n/**\n * An `addEventListener` ponyfill, supports the `once` option\n * \n * @param node the element\n * @param eventName the event name\n * @param handle the handler\n * @param options event options\n */\nfunction addEventListener(node, eventName, handler, options) {\n  if (options && typeof options !== 'boolean' && !onceSupported) {\n    var once = options.once,\n        capture = options.capture;\n    var wrappedHandler = handler;\n\n    if (!onceSupported && once) {\n      wrappedHandler = handler.__once || function onceHandler(event) {\n        this.removeEventListener(eventName, onceHandler, capture);\n        handler.call(this, event);\n      };\n\n      handler.__once = wrappedHandler;\n    }\n\n    node.addEventListener(eventName, wrappedHandler, optionsSupported ? options : capture);\n  }\n\n  node.addEventListener(eventName, handler, options);\n}\n\nexport default addEventListener;","/**\n * Returns the owner document of a given element.\n * \n * @param node the element\n */\nexport default function ownerDocument(node) {\n  return node && node.ownerDocument || document;\n}","/**\n * A `removeEventListener` ponyfill\n * \n * @param node the element\n * @param eventName the event name\n * @param handle the handler\n * @param options event options\n */\nfunction removeEventListener(node, eventName, handler, options) {\n  var capture = options && typeof options !== 'boolean' ? options.capture : options;\n  node.removeEventListener(eventName, handler, capture);\n\n  if (handler.__once) {\n    node.removeEventListener(eventName, handler.__once, capture);\n  }\n}\n\nexport default removeEventListener;","import canUseDOM from './canUseDOM';\nvar size;\nexport default function scrollbarSize(recalc) {\n  if (!size && size !== 0 || recalc) {\n    if (canUseDOM) {\n      var scrollDiv = document.createElement('div');\n      scrollDiv.style.position = 'absolute';\n      scrollDiv.style.top = '-9999px';\n      scrollDiv.style.width = '50px';\n      scrollDiv.style.height = '50px';\n      scrollDiv.style.overflow = 'scroll';\n      document.body.appendChild(scrollDiv);\n      size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      document.body.removeChild(scrollDiv);\n    }\n  }\n\n  return size;\n}","import { useEffect, useRef } from 'react';\n\n/**\n * Creates a `Ref` whose value is updated in an effect, ensuring the most recent\n * value is the one rendered with. Generally only required for Concurrent mode usage\n * where previous work in `render()` may be discarded before being used.\n *\n * This is safe to access in an event handler.\n *\n * @param value The `Ref` value\n */\nfunction useCommittedRef(value) {\n  const ref = useRef(value);\n  useEffect(() => {\n    ref.current = value;\n  }, [value]);\n  return ref;\n}\nexport default useCommittedRef;","import { useCallback } from 'react';\nimport useCommittedRef from './useCommittedRef';\nexport default function useEventCallback(fn) {\n  const ref = useCommittedRef(fn);\n  return useCallback(function (...args) {\n    return ref.current && ref.current(...args);\n  }, [ref]);\n}","import { useMemo } from 'react';\nconst toFnRef = ref => !ref || typeof ref === 'function' ? ref : value => {\n  ref.current = value;\n};\nexport function mergeRefs(refA, refB) {\n  const a = toFnRef(refA);\n  const b = toFnRef(refB);\n  return value => {\n    if (a) a(value);\n    if (b) b(value);\n  };\n}\n\n/**\n * Create and returns a single callback ref composed from two other Refs.\n *\n * ```tsx\n * const Button = React.forwardRef((props, ref) => {\n *   const [element, attachRef] = useCallbackRef<HTMLButtonElement>();\n *   const mergedRef = useMergedRefs(ref, attachRef);\n *\n *   return <button ref={mergedRef} {...props}/>\n * })\n * ```\n *\n * @param refA A Callback or mutable Ref\n * @param refB A Callback or mutable Ref\n * @category refs\n */\nfunction useMergedRefs(refA, refB) {\n  return useMemo(() => mergeRefs(refA, refB), [refA, refB]);\n}\nexport default useMergedRefs;","import useUpdatedRef from './useUpdatedRef';\nimport { useEffect } from 'react';\n\n/**\n * Attach a callback that fires when a component unmounts\n *\n * @param fn Handler to run when the component unmounts\n * @category effects\n */\nexport default function useWillUnmount(fn) {\n  const onUnmount = useUpdatedRef(fn);\n  useEffect(() => () => onUnmount.current(), []);\n}","import { useRef } from 'react';\n\n/**\n * Returns a ref that is immediately updated with the new value\n *\n * @param value The Ref value\n * @category refs\n */\nexport default function useUpdatedRef(value) {\n  const valueRef = useRef(value);\n  valueRef.current = value;\n  return valueRef;\n}","import ownerWindow from './ownerWindow';\n/**\n * Returns one or all computed style properties of an element.\n * \n * @param node the element\n * @param psuedoElement the style property\n */\n\nexport default function getComputedStyle(node, psuedoElement) {\n  return ownerWindow(node).getComputedStyle(node, psuedoElement);\n}","import ownerDocument from './ownerDocument';\n/**\n * Returns the owner window of a given element.\n * \n * @param node the element\n */\n\nexport default function ownerWindow(node) {\n  var doc = ownerDocument(node);\n  return doc && doc.defaultView || window;\n}","var rUpper = /([A-Z])/g;\nexport default function hyphenate(string) {\n  return string.replace(rUpper, '-$1').toLowerCase();\n}","/**\n * Copyright 2013-2014, Facebook, Inc.\n * All rights reserved.\n * https://github.com/facebook/react/blob/2aeb8a2a6beb00617a4217f7f8284924fa2ad819/src/vendor/core/hyphenateStyleName.js\n */\nimport hyphenate from './hyphenate';\nvar msPattern = /^ms-/;\nexport default function hyphenateStyleName(string) {\n  return hyphenate(string).replace(msPattern, '-ms-');\n}","var supportedTransforms = /^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i;\nexport default function isTransform(value) {\n  return !!(value && supportedTransforms.test(value));\n}","import getComputedStyle from './getComputedStyle';\nimport hyphenate from './hyphenateStyle';\nimport isTransform from './isTransform';\n\nfunction style(node, property) {\n  var css = '';\n  var transforms = '';\n\n  if (typeof property === 'string') {\n    return node.style.getPropertyValue(hyphenate(property)) || getComputedStyle(node).getPropertyValue(hyphenate(property));\n  }\n\n  Object.keys(property).forEach(function (key) {\n    var value = property[key];\n\n    if (!value && value !== 0) {\n      node.style.removeProperty(hyphenate(key));\n    } else if (isTransform(key)) {\n      transforms += key + \"(\" + value + \") \";\n    } else {\n      css += hyphenate(key) + \": \" + value + \";\";\n    }\n  });\n\n  if (transforms) {\n    css += \"transform: \" + transforms + \";\";\n  }\n\n  node.style.cssText += \";\" + css;\n}\n\nexport default style;","import addEventListener from './addEventListener';\nimport removeEventListener from './removeEventListener';\n\nfunction listen(node, eventName, handler, options) {\n  addEventListener(node, eventName, handler, options);\n  return function () {\n    removeEventListener(node, eventName, handler, options);\n  };\n}\n\nexport default listen;","import css from './css';\nimport listen from './listen';\nimport triggerEvent from './triggerEvent';\n\nfunction parseDuration(node) {\n  var str = css(node, 'transitionDuration') || '';\n  var mult = str.indexOf('ms') === -1 ? 1000 : 1;\n  return parseFloat(str) * mult;\n}\n\nfunction emulateTransitionEnd(element, duration, padding) {\n  if (padding === void 0) {\n    padding = 5;\n  }\n\n  var called = false;\n  var handle = setTimeout(function () {\n    if (!called) triggerEvent(element, 'transitionend', true);\n  }, duration + padding);\n  var remove = listen(element, 'transitionend', function () {\n    called = true;\n  }, {\n    once: true\n  });\n  return function () {\n    clearTimeout(handle);\n    remove();\n  };\n}\n\nexport default function transitionEnd(element, handler, duration, padding) {\n  if (duration == null) duration = parseDuration(element) || 0;\n  var removeEmulate = emulateTransitionEnd(element, duration, padding);\n  var remove = listen(element, 'transitionend', handler);\n  return function () {\n    removeEmulate();\n    remove();\n  };\n}","/**\n * Triggers an event on a given element.\n * \n * @param node the element\n * @param eventName the event name to trigger\n * @param bubbles whether the event should bubble up\n * @param cancelable whether the event should be cancelable\n */\nexport default function triggerEvent(node, eventName, bubbles, cancelable) {\n  if (bubbles === void 0) {\n    bubbles = false;\n  }\n\n  if (cancelable === void 0) {\n    cancelable = true;\n  }\n\n  if (node) {\n    var event = document.createEvent('HTMLEvents');\n    event.initEvent(eventName, bubbles, cancelable);\n    node.dispatchEvent(event);\n  }\n}","import ownerDocument from './ownerDocument';\n/**\n * Returns the actively focused element safely.\n *\n * @param doc the document to check\n */\n\nexport default function activeElement(doc) {\n  if (doc === void 0) {\n    doc = ownerDocument();\n  }\n\n  // Support: IE 9 only\n  // IE9 throws an \"Unspecified error\" accessing document.activeElement from an <iframe>\n  try {\n    var active = doc.activeElement; // IE11 returns a seemingly empty object in some cases when accessing\n    // document.activeElement from an <iframe>\n\n    if (!active || !active.nodeName) return null;\n    return active;\n  } catch (e) {\n    /* ie throws if no active element */\n    return doc.body;\n  }\n}","/* eslint-disable no-bitwise, no-cond-assign */\n\n/**\n * Checks if an element contains another given element.\n * \n * @param context the context element\n * @param node the element to check\n */\nexport default function contains(context, node) {\n  // HTML DOM and SVG DOM may have different support levels,\n  // so we need to check on context instead of a document root element.\n  if (context.contains) return context.contains(node);\n  if (context.compareDocumentPosition) return context === node || !!(context.compareDocumentPosition(node) & 16);\n}","import css from 'dom-helpers/css';\nimport { dataAttr } from './DataKey';\nimport getBodyScrollbarWidth from './getScrollbarWidth';\nexport const OPEN_DATA_ATTRIBUTE = dataAttr('modal-open');\n\n/**\n * Manages a stack of Modals as well as ensuring\n * body scrolling is is disabled and padding accounted for\n */\nclass ModalManager {\n  constructor({\n    ownerDocument,\n    handleContainerOverflow = true,\n    isRTL = false\n  } = {}) {\n    this.handleContainerOverflow = handleContainerOverflow;\n    this.isRTL = isRTL;\n    this.modals = [];\n    this.ownerDocument = ownerDocument;\n  }\n  getScrollbarWidth() {\n    return getBodyScrollbarWidth(this.ownerDocument);\n  }\n  getElement() {\n    return (this.ownerDocument || document).body;\n  }\n  setModalAttributes(_modal) {\n    // For overriding\n  }\n  removeModalAttributes(_modal) {\n    // For overriding\n  }\n  setContainerStyle(containerState) {\n    const style = {\n      overflow: 'hidden'\n    };\n\n    // we are only interested in the actual `style` here\n    // because we will override it\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const container = this.getElement();\n    containerState.style = {\n      overflow: container.style.overflow,\n      [paddingProp]: container.style[paddingProp]\n    };\n    if (containerState.scrollBarWidth) {\n      // use computed style, here to get the real padding\n      // to add our scrollbar width\n      style[paddingProp] = `${parseInt(css(container, paddingProp) || '0', 10) + containerState.scrollBarWidth}px`;\n    }\n    container.setAttribute(OPEN_DATA_ATTRIBUTE, '');\n    css(container, style);\n  }\n  reset() {\n    [...this.modals].forEach(m => this.remove(m));\n  }\n  removeContainerStyle(containerState) {\n    const container = this.getElement();\n    container.removeAttribute(OPEN_DATA_ATTRIBUTE);\n    Object.assign(container.style, containerState.style);\n  }\n  add(modal) {\n    let modalIdx = this.modals.indexOf(modal);\n    if (modalIdx !== -1) {\n      return modalIdx;\n    }\n    modalIdx = this.modals.length;\n    this.modals.push(modal);\n    this.setModalAttributes(modal);\n    if (modalIdx !== 0) {\n      return modalIdx;\n    }\n    this.state = {\n      scrollBarWidth: this.getScrollbarWidth(),\n      style: {}\n    };\n    if (this.handleContainerOverflow) {\n      this.setContainerStyle(this.state);\n    }\n    return modalIdx;\n  }\n  remove(modal) {\n    const modalIdx = this.modals.indexOf(modal);\n    if (modalIdx === -1) {\n      return;\n    }\n    this.modals.splice(modalIdx, 1);\n\n    // if that was the last modal in a container,\n    // clean up the container\n    if (!this.modals.length && this.handleContainerOverflow) {\n      this.removeContainerStyle(this.state);\n    }\n    this.removeModalAttributes(modal);\n  }\n  isTopModal(modal) {\n    return !!this.modals.length && this.modals[this.modals.length - 1] === modal;\n  }\n}\nexport default ModalManager;","export const ATTRIBUTE_PREFIX = `data-rr-ui-`;\nexport const PROPERTY_PREFIX = `rrUi`;\nexport function dataAttr(property) {\n  return `${ATTRIBUTE_PREFIX}${property}`;\n}\nexport function dataProp(property) {\n  return `${PROPERTY_PREFIX}${property}`;\n}","/**\n * Get the width of the vertical window scrollbar if it's visible\n */\nexport default function getBodyScrollbarWidth(ownerDocument = document) {\n  const window = ownerDocument.defaultView;\n  return Math.abs(window.innerWidth - ownerDocument.documentElement.clientWidth);\n}","import { createContext, useContext } from 'react';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nconst Context = /*#__PURE__*/createContext(canUseDOM ? window : undefined);\nexport const WindowProvider = Context.Provider;\n\n/**\n * The document \"window\" placed in React context. Helpful for determining\n * SSR context, or when rendering into an iframe.\n *\n * @returns the current window\n */\nexport default function useWindow() {\n  return useContext(Context);\n}","import ownerDocument from 'dom-helpers/ownerDocument';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport { useState, useEffect } from 'react';\nimport useWindow from './useWindow';\nexport const resolveContainerRef = (ref, document) => {\n  if (!canUseDOM) return null;\n  if (ref == null) return (document || ownerDocument()).body;\n  if (typeof ref === 'function') ref = ref();\n  if (ref && 'current' in ref) ref = ref.current;\n  if (ref && ('nodeType' in ref || ref.getBoundingClientRect)) return ref;\n  return null;\n};\nexport default function useWaitForDOMRef(ref, onResolved) {\n  const window = useWindow();\n  const [resolvedRef, setRef] = useState(() => resolveContainerRef(ref, window == null ? void 0 : window.document));\n  if (!resolvedRef) {\n    const earlyRef = resolveContainerRef(ref);\n    if (earlyRef) setRef(earlyRef);\n  }\n  useEffect(() => {\n    if (onResolved && resolvedRef) {\n      onResolved(resolvedRef);\n    }\n  }, [onResolved, resolvedRef]);\n  useEffect(() => {\n    const nextRef = resolveContainerRef(ref);\n    if (nextRef !== resolvedRef) {\n      setRef(nextRef);\n    }\n  }, [ref, resolvedRef]);\n  return resolvedRef;\n}","import { useEffect, useLayoutEffect } from 'react';\nconst isReactNative = typeof global !== 'undefined' &&\n// @ts-ignore\nglobal.navigator &&\n// @ts-ignore\nglobal.navigator.product === 'ReactNative';\nconst isDOM = typeof document !== 'undefined';\n\n/**\n * Is `useLayoutEffect` in a DOM or React Native environment, otherwise resolves to useEffect\n * Only useful to avoid the console warning.\n *\n * PREFER `useEffect` UNLESS YOU KNOW WHAT YOU ARE DOING.\n *\n * @category effects\n */\nexport default isDOM || isReactNative ? useLayoutEffect : useEffect;","import useEventCallback from '@restart/hooks/useEventCallback';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport { cloneElement, useEffect, useRef } from 'react';\nfunction NoopTransition({\n  children,\n  in: inProp,\n  onExited,\n  mountOnEnter,\n  unmountOnExit\n}) {\n  const ref = useRef(null);\n  const hasEnteredRef = useRef(inProp);\n  const handleExited = useEventCallback(onExited);\n  useEffect(() => {\n    if (inProp) hasEnteredRef.current = true;else {\n      handleExited(ref.current);\n    }\n  }, [inProp, handleExited]);\n  const combinedRef = useMergedRefs(ref, children.ref);\n  const child = /*#__PURE__*/cloneElement(children, {\n    ref: combinedRef\n  });\n  if (inProp) return child;\n  if (unmountOnExit) {\n    return null;\n  }\n  if (!hasEnteredRef.current && mountOnEnter) {\n    return null;\n  }\n  return child;\n}\nexport default NoopTransition;","import useMergedRefs from '@restart/hooks/useMergedRefs';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useIsomorphicEffect from '@restart/hooks/useIsomorphicEffect';\nimport React, { useRef, cloneElement, useState } from 'react';\nimport NoopTransition from './NoopTransition';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useTransition({\n  in: inProp,\n  onTransition\n}) {\n  const ref = useRef(null);\n  const isInitialRef = useRef(true);\n  const handleTransition = useEventCallback(onTransition);\n  useIsomorphicEffect(() => {\n    if (!ref.current) {\n      return undefined;\n    }\n    let stale = false;\n    handleTransition({\n      in: inProp,\n      element: ref.current,\n      initial: isInitialRef.current,\n      isStale: () => stale\n    });\n    return () => {\n      stale = true;\n    };\n  }, [inProp, handleTransition]);\n  useIsomorphicEffect(() => {\n    isInitialRef.current = false;\n    // this is for strict mode\n    return () => {\n      isInitialRef.current = true;\n    };\n  }, []);\n  return ref;\n}\n/**\n * Adapts an imperative transition function to a subset of the RTG `<Transition>` component API.\n *\n * ImperativeTransition does not support mounting options or `appear` at the moment, meaning\n * that it always acts like: `mountOnEnter={true} unmountOnExit={true} appear={true}`\n */\nexport default function ImperativeTransition({\n  children,\n  in: inProp,\n  onExited,\n  onEntered,\n  transition\n}) {\n  const [exited, setExited] = useState(!inProp);\n\n  // TODO: I think this needs to be in an effect\n  if (inProp && exited) {\n    setExited(false);\n  }\n  const ref = useTransition({\n    in: !!inProp,\n    onTransition: options => {\n      const onFinish = () => {\n        if (options.isStale()) return;\n        if (options.in) {\n          onEntered == null ? void 0 : onEntered(options.element, options.initial);\n        } else {\n          setExited(true);\n          onExited == null ? void 0 : onExited(options.element);\n        }\n      };\n      Promise.resolve(transition(options)).then(onFinish, error => {\n        if (!options.in) setExited(true);\n        throw error;\n      });\n    }\n  });\n  const combinedRef = useMergedRefs(ref, children.ref);\n  return exited && !inProp ? null : /*#__PURE__*/cloneElement(children, {\n    ref: combinedRef\n  });\n}\nexport function renderTransition(Component, runTransition, props) {\n  if (Component) {\n    return /*#__PURE__*/_jsx(Component, Object.assign({}, props));\n  }\n  if (runTransition) {\n    return /*#__PURE__*/_jsx(ImperativeTransition, Object.assign({}, props, {\n      transition: runTransition\n    }));\n  }\n  return /*#__PURE__*/_jsx(NoopTransition, Object.assign({}, props));\n}","const _excluded = [\"show\", \"role\", \"className\", \"style\", \"children\", \"backdrop\", \"keyboard\", \"onBackdropClick\", \"onEscapeKeyDown\", \"transition\", \"runTransition\", \"backdropTransition\", \"runBackdropTransition\", \"autoFocus\", \"enforceFocus\", \"restoreFocus\", \"restoreFocusOptions\", \"renderDialog\", \"renderBackdrop\", \"manager\", \"container\", \"onShow\", \"onHide\", \"onExit\", \"onExited\", \"onExiting\", \"onEnter\", \"onEntering\", \"onEntered\"];\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* eslint-disable @typescript-eslint/no-use-before-define, react/prop-types */\n\nimport activeElement from 'dom-helpers/activeElement';\nimport contains from 'dom-helpers/contains';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport listen from 'dom-helpers/listen';\nimport { useState, useRef, useCallback, useImperativeHandle, forwardRef, useEffect } from 'react';\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport useMounted from '@restart/hooks/useMounted';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport usePrevious from '@restart/hooks/usePrevious';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport ModalManager from './ModalManager';\nimport useWaitForDOMRef from './useWaitForDOMRef';\nimport useWindow from './useWindow';\nimport { renderTransition } from './ImperativeTransition';\nimport { isEscKey } from './utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nlet manager;\nfunction getManager(window) {\n  if (!manager) manager = new ModalManager({\n    ownerDocument: window == null ? void 0 : window.document\n  });\n  return manager;\n}\nfunction useModalManager(provided) {\n  const window = useWindow();\n  const modalManager = provided || getManager(window);\n  const modal = useRef({\n    dialog: null,\n    backdrop: null\n  });\n  return Object.assign(modal.current, {\n    add: () => modalManager.add(modal.current),\n    remove: () => modalManager.remove(modal.current),\n    isTopModal: () => modalManager.isTopModal(modal.current),\n    setDialogRef: useCallback(ref => {\n      modal.current.dialog = ref;\n    }, []),\n    setBackdropRef: useCallback(ref => {\n      modal.current.backdrop = ref;\n    }, [])\n  });\n}\nconst Modal = /*#__PURE__*/forwardRef((_ref, ref) => {\n  let {\n      show = false,\n      role = 'dialog',\n      className,\n      style,\n      children,\n      backdrop = true,\n      keyboard = true,\n      onBackdropClick,\n      onEscapeKeyDown,\n      transition,\n      runTransition,\n      backdropTransition,\n      runBackdropTransition,\n      autoFocus = true,\n      enforceFocus = true,\n      restoreFocus = true,\n      restoreFocusOptions,\n      renderDialog,\n      renderBackdrop = props => /*#__PURE__*/_jsx(\"div\", Object.assign({}, props)),\n      manager: providedManager,\n      container: containerRef,\n      onShow,\n      onHide = () => {},\n      onExit,\n      onExited,\n      onExiting,\n      onEnter,\n      onEntering,\n      onEntered\n    } = _ref,\n    rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const ownerWindow = useWindow();\n  const container = useWaitForDOMRef(containerRef);\n  const modal = useModalManager(providedManager);\n  const isMounted = useMounted();\n  const prevShow = usePrevious(show);\n  const [exited, setExited] = useState(!show);\n  const lastFocusRef = useRef(null);\n  useImperativeHandle(ref, () => modal, [modal]);\n  if (canUseDOM && !prevShow && show) {\n    lastFocusRef.current = activeElement(ownerWindow == null ? void 0 : ownerWindow.document);\n  }\n\n  // TODO: I think this needs to be in an effect\n  if (show && exited) {\n    setExited(false);\n  }\n  const handleShow = useEventCallback(() => {\n    modal.add();\n    removeKeydownListenerRef.current = listen(document, 'keydown', handleDocumentKeyDown);\n    removeFocusListenerRef.current = listen(document, 'focus',\n    // the timeout is necessary b/c this will run before the new modal is mounted\n    // and so steals focus from it\n    () => setTimeout(handleEnforceFocus), true);\n    if (onShow) {\n      onShow();\n    }\n\n    // autofocus after onShow to not trigger a focus event for previous\n    // modals before this one is shown.\n    if (autoFocus) {\n      var _modal$dialog$ownerDo, _modal$dialog;\n      const currentActiveElement = activeElement((_modal$dialog$ownerDo = (_modal$dialog = modal.dialog) == null ? void 0 : _modal$dialog.ownerDocument) != null ? _modal$dialog$ownerDo : ownerWindow == null ? void 0 : ownerWindow.document);\n      if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n        lastFocusRef.current = currentActiveElement;\n        modal.dialog.focus();\n      }\n    }\n  });\n  const handleHide = useEventCallback(() => {\n    modal.remove();\n    removeKeydownListenerRef.current == null ? void 0 : removeKeydownListenerRef.current();\n    removeFocusListenerRef.current == null ? void 0 : removeFocusListenerRef.current();\n    if (restoreFocus) {\n      var _lastFocusRef$current;\n      // Support: <=IE11 doesn't support `focus()` on svg elements (RB: #917)\n      (_lastFocusRef$current = lastFocusRef.current) == null ? void 0 : _lastFocusRef$current.focus == null ? void 0 : _lastFocusRef$current.focus(restoreFocusOptions);\n      lastFocusRef.current = null;\n    }\n  });\n\n  // TODO: try and combine these effects: https://github.com/react-bootstrap/react-overlays/pull/794#discussion_r409954120\n\n  // Show logic when:\n  //  - show is `true` _and_ `container` has resolved\n  useEffect(() => {\n    if (!show || !container) return;\n    handleShow();\n  }, [show, container, /* should never change: */handleShow]);\n\n  // Hide cleanup logic when:\n  //  - `exited` switches to true\n  //  - component unmounts;\n  useEffect(() => {\n    if (!exited) return;\n    handleHide();\n  }, [exited, handleHide]);\n  useWillUnmount(() => {\n    handleHide();\n  });\n\n  // --------------------------------\n\n  const handleEnforceFocus = useEventCallback(() => {\n    if (!enforceFocus || !isMounted() || !modal.isTopModal()) {\n      return;\n    }\n    const currentActiveElement = activeElement(ownerWindow == null ? void 0 : ownerWindow.document);\n    if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n      modal.dialog.focus();\n    }\n  });\n  const handleBackdropClick = useEventCallback(e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n    onBackdropClick == null ? void 0 : onBackdropClick(e);\n    if (backdrop === true) {\n      onHide();\n    }\n  });\n  const handleDocumentKeyDown = useEventCallback(e => {\n    if (keyboard && isEscKey(e) && modal.isTopModal()) {\n      onEscapeKeyDown == null ? void 0 : onEscapeKeyDown(e);\n      if (!e.defaultPrevented) {\n        onHide();\n      }\n    }\n  });\n  const removeFocusListenerRef = useRef();\n  const removeKeydownListenerRef = useRef();\n  const handleHidden = (...args) => {\n    setExited(true);\n    onExited == null ? void 0 : onExited(...args);\n  };\n  if (!container) {\n    return null;\n  }\n  const dialogProps = Object.assign({\n    role,\n    ref: modal.setDialogRef,\n    // apparently only works on the dialog role element\n    'aria-modal': role === 'dialog' ? true : undefined\n  }, rest, {\n    style,\n    className,\n    tabIndex: -1\n  });\n  let dialog = renderDialog ? renderDialog(dialogProps) : /*#__PURE__*/_jsx(\"div\", Object.assign({}, dialogProps, {\n    children: /*#__PURE__*/React.cloneElement(children, {\n      role: 'document'\n    })\n  }));\n  dialog = renderTransition(transition, runTransition, {\n    unmountOnExit: true,\n    mountOnEnter: true,\n    appear: true,\n    in: !!show,\n    onExit,\n    onExiting,\n    onExited: handleHidden,\n    onEnter,\n    onEntering,\n    onEntered,\n    children: dialog\n  });\n  let backdropElement = null;\n  if (backdrop) {\n    backdropElement = renderBackdrop({\n      ref: modal.setBackdropRef,\n      onClick: handleBackdropClick\n    });\n    backdropElement = renderTransition(backdropTransition, runBackdropTransition, {\n      in: !!show,\n      appear: true,\n      mountOnEnter: true,\n      unmountOnExit: true,\n      children: backdropElement\n    });\n  }\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxs(_Fragment, {\n      children: [backdropElement, dialog]\n    }), container)\n  });\n});\nModal.displayName = 'Modal';\nexport default Object.assign(Modal, {\n  Manager: ModalManager\n});","import { useRef, useEffect } from 'react';\n\n/**\n * Track whether a component is current mounted. Generally less preferable than\n * properlly canceling effects so they don't run after a component is unmounted,\n * but helpful in cases where that isn't feasible, such as a `Promise` resolution.\n *\n * @returns a function that returns the current isMounted state of the component\n *\n * ```ts\n * const [data, setData] = useState(null)\n * const isMounted = useMounted()\n *\n * useEffect(() => {\n *   fetchdata().then((newData) => {\n *      if (isMounted()) {\n *        setData(newData);\n *      }\n *   })\n * })\n * ```\n */\nexport default function useMounted() {\n  const mounted = useRef(true);\n  const isMounted = useRef(() => mounted.current);\n  useEffect(() => {\n    mounted.current = true;\n    return () => {\n      mounted.current = false;\n    };\n  }, []);\n  return isMounted.current;\n}","import { useEffect, useRef } from 'react';\n\n/**\n * Store the last of some value. Tracked via a `Ref` only updating it\n * after the component renders.\n *\n * Helpful if you need to compare a prop value to it's previous value during render.\n *\n * ```ts\n * function Component(props) {\n *   const lastProps = usePrevious(props)\n *\n *   if (lastProps.foo !== props.foo)\n *     resetValueFromProps(props.foo)\n * }\n * ```\n *\n * @param value the value to track\n */\nexport default function usePrevious(value) {\n  const ref = useRef(null);\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}","/* eslint-disable import/prefer-default-export */\nexport function isEscKey(e) {\n  return e.code === 'Escape' || e.keyCode === 27;\n}","var toArray = Function.prototype.bind.call(Function.prototype.call, [].slice);\n/**\n * Runs `querySelectorAll` on a given element.\n * \n * @param element the element\n * @param selector the selector\n */\n\nexport default function qsa(element, selector) {\n  return toArray(element.querySelectorAll(selector));\n}","function replaceClassName(origClass, classToRemove) {\n  return origClass.replace(new RegExp(\"(^|\\\\s)\" + classToRemove + \"(?:\\\\s|$)\", 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n}\n/**\n * Removes a CSS class from a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\n\nexport default function removeClass(element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else if (typeof element.className === 'string') {\n    element.className = replaceClassName(element.className, className);\n  } else {\n    element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));\n  }\n}","import addClass from 'dom-helpers/addClass';\nimport css from 'dom-helpers/css';\nimport qsa from 'dom-helpers/querySelectorAll';\nimport removeClass from 'dom-helpers/removeClass';\nimport ModalManager from '@restart/ui/ModalManager';\nconst Selector = {\n  FIXED_CONTENT: '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top',\n  STICKY_CONTENT: '.sticky-top',\n  NAVBAR_TOGGLER: '.navbar-toggler'\n};\nclass BootstrapModalManager extends ModalManager {\n  adjustAndStore(prop, element, adjust) {\n    const actual = element.style[prop];\n    // TODO: DOMStringMap and CSSStyleDeclaration aren't strictly compatible\n    // @ts-ignore\n    element.dataset[prop] = actual;\n    css(element, {\n      [prop]: `${parseFloat(css(element, prop)) + adjust}px`\n    });\n  }\n  restore(prop, element) {\n    const value = element.dataset[prop];\n    if (value !== undefined) {\n      delete element.dataset[prop];\n      css(element, {\n        [prop]: value\n      });\n    }\n  }\n  setContainerStyle(containerState) {\n    super.setContainerStyle(containerState);\n    const container = this.getElement();\n    addClass(container, 'modal-open');\n    if (!containerState.scrollBarWidth) return;\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.adjustAndStore(paddingProp, el, containerState.scrollBarWidth));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.adjustAndStore(marginProp, el, -containerState.scrollBarWidth));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.adjustAndStore(marginProp, el, containerState.scrollBarWidth));\n  }\n  removeContainerStyle(containerState) {\n    super.removeContainerStyle(containerState);\n    const container = this.getElement();\n    removeClass(container, 'modal-open');\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.restore(paddingProp, el));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.restore(marginProp, el));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.restore(marginProp, el));\n  }\n}\nlet sharedManager;\nexport function getSharedManager(options) {\n  if (!sharedManager) sharedManager = new BootstrapModalManager(options);\n  return sharedManager;\n}\nexport default BootstrapModalManager;","import hasClass from './hasClass';\n/**\n * Adds a CSS class to a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\nexport default function addClass(element, className) {\n  if (element.classList) element.classList.add(className);else if (!hasClass(element, className)) if (typeof element.className === 'string') element.className = element.className + \" \" + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + \" \" + className);\n}","/**\n * Checks if a given element has a CSS class.\n * \n * @param element the element\n * @param className the CSS class name\n */\nexport default function hasClass(element, className) {\n  if (element.classList) return !!className && element.classList.contains(className);\n  return (\" \" + (element.className.baseVal || element.className) + \" \").indexOf(\" \" + className + \" \") !== -1;\n}","import css from 'dom-helpers/css';\nimport transitionEnd from 'dom-helpers/transitionEnd';\nfunction parseDuration(node, property) {\n  const str = css(node, property) || '';\n  const mult = str.indexOf('ms') === -1 ? 1000 : 1;\n  return parseFloat(str) * mult;\n}\nexport default function transitionEndListener(element, handler) {\n  const duration = parseDuration(element, 'transitionDuration');\n  const delay = parseDuration(element, 'transitionDelay');\n  const remove = transitionEnd(element, e => {\n    if (e.target === element) {\n      remove();\n      handler(e);\n    }\n  }, duration + delay);\n}","\"use client\";\n\nimport React, { useCallback, useRef } from 'react';\nimport Transition from 'react-transition-group/Transition';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport safeFindDOMNode from './safeFindDOMNode';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n// Normalizes Transition callbacks when nodeRef is used.\nconst TransitionWrapper = /*#__PURE__*/React.forwardRef(({\n  onEnter,\n  onEntering,\n  onEntered,\n  onExit,\n  onExiting,\n  onExited,\n  addEndListener,\n  children,\n  childRef,\n  ...props\n}, ref) => {\n  const nodeRef = useRef(null);\n  const mergedRef = useMergedRefs(nodeRef, childRef);\n  const attachRef = r => {\n    mergedRef(safeFindDOMNode(r));\n  };\n  const normalize = callback => param => {\n    if (callback && nodeRef.current) {\n      callback(nodeRef.current, param);\n    }\n  };\n\n  /* eslint-disable react-hooks/exhaustive-deps */\n  const handleEnter = useCallback(normalize(onEnter), [onEnter]);\n  const handleEntering = useCallback(normalize(onEntering), [onEntering]);\n  const handleEntered = useCallback(normalize(onEntered), [onEntered]);\n  const handleExit = useCallback(normalize(onExit), [onExit]);\n  const handleExiting = useCallback(normalize(onExiting), [onExiting]);\n  const handleExited = useCallback(normalize(onExited), [onExited]);\n  const handleAddEndListener = useCallback(normalize(addEndListener), [addEndListener]);\n  /* eslint-enable react-hooks/exhaustive-deps */\n\n  return /*#__PURE__*/_jsx(Transition, {\n    ref: ref,\n    ...props,\n    onEnter: handleEnter,\n    onEntered: handleEntered,\n    onEntering: handleEntering,\n    onExit: handleExit,\n    onExited: handleExited,\n    onExiting: handleExiting,\n    addEndListener: handleAddEndListener,\n    nodeRef: nodeRef,\n    children: typeof children === 'function' ? (status, innerProps) =>\n    // TODO: Types for RTG missing innerProps, so need to cast.\n    children(status, {\n      ...innerProps,\n      ref: attachRef\n    }) : /*#__PURE__*/React.cloneElement(children, {\n      ref: attachRef\n    })\n  });\n});\nexport default TransitionWrapper;","import ReactDOM from 'react-dom';\nexport default function safeFindDOMNode(componentOrElement) {\n  if (componentOrElement && 'setState' in componentOrElement) {\n    return ReactDOM.findDOMNode(componentOrElement);\n  }\n  return componentOrElement != null ? componentOrElement : null;\n}","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useCallback } from 'react';\nimport { ENTERED, ENTERING } from 'react-transition-group/Transition';\nimport transitionEndListener from './transitionEndListener';\nimport triggerBrowserReflow from './triggerBrowserReflow';\nimport TransitionWrapper from './TransitionWrapper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst fadeStyles = {\n  [ENTERING]: 'show',\n  [ENTERED]: 'show'\n};\nconst Fade = /*#__PURE__*/React.forwardRef(({\n  className,\n  children,\n  transitionClasses = {},\n  onEnter,\n  ...rest\n}, ref) => {\n  const props = {\n    in: false,\n    timeout: 300,\n    mountOnEnter: false,\n    unmountOnExit: false,\n    appear: false,\n    ...rest\n  };\n  const handleEnter = useCallback((node, isAppearing) => {\n    triggerBrowserReflow(node);\n    onEnter == null ? void 0 : onEnter(node, isAppearing);\n  }, [onEnter]);\n  return /*#__PURE__*/_jsx(TransitionWrapper, {\n    ref: ref,\n    addEndListener: transitionEndListener,\n    ...props,\n    onEnter: handleEnter,\n    childRef: children.ref,\n    children: (status, innerProps) => /*#__PURE__*/React.cloneElement(children, {\n      ...innerProps,\n      className: classNames('fade', className, children.props.className, fadeStyles[status], transitionClasses[status])\n    })\n  });\n});\nFade.displayName = 'Fade';\nexport default Fade;","// reading a dimension prop will cause the browser to recalculate,\n// which will let our animations work\nexport default function triggerBrowserReflow(node) {\n  // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n  node.offsetHeight;\n}","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalBody = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-body');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nModalBody.displayName = 'ModalBody';\nexport default ModalBody;","\"use client\";\n\nimport * as React from 'react';\nconst ModalContext = /*#__PURE__*/React.createContext({\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onHide() {}\n});\nexport default ModalContext;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalDialog = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  contentClassName,\n  centered,\n  size,\n  fullscreen,\n  children,\n  scrollable,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const dialogClass = `${bsPrefix}-dialog`;\n  const fullScreenClass = typeof fullscreen === 'string' ? `${bsPrefix}-fullscreen-${fullscreen}` : `${bsPrefix}-fullscreen`;\n  return /*#__PURE__*/_jsx(\"div\", {\n    ...props,\n    ref: ref,\n    className: classNames(dialogClass, className, size && `${bsPrefix}-${size}`, centered && `${dialogClass}-centered`, scrollable && `${dialogClass}-scrollable`, fullscreen && fullScreenClass),\n    children: /*#__PURE__*/_jsx(\"div\", {\n      className: classNames(`${bsPrefix}-content`, contentClassName),\n      children: children\n    })\n  });\n});\nModalDialog.displayName = 'ModalDialog';\nexport default ModalDialog;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalFooter = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-footer');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nModalFooter.displayName = 'ModalFooter';\nexport default ModalFooter;","import PropTypes from 'prop-types';\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /** An accessible label indicating the relevant information about the Close Button. */\n  'aria-label': PropTypes.string,\n  /** A callback fired after the Close Button is clicked. */\n  onClick: PropTypes.func,\n  /**\n   * Render different color variant for the button.\n   *\n   * Omitting this will render the default dark color.\n   */\n  variant: PropTypes.oneOf(['white'])\n};\nconst CloseButton = /*#__PURE__*/React.forwardRef(({\n  className,\n  variant,\n  'aria-label': ariaLabel = 'Close',\n  ...props\n}, ref) => /*#__PURE__*/_jsx(\"button\", {\n  ref: ref,\n  type: \"button\",\n  className: classNames('btn-close', variant && `btn-close-${variant}`, className),\n  \"aria-label\": ariaLabel,\n  ...props\n}));\nCloseButton.displayName = 'CloseButton';\nCloseButton.propTypes = propTypes;\nexport default CloseButton;","\"use client\";\n\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport CloseButton from './CloseButton';\nimport ModalContext from './ModalContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst AbstractModalHeader = /*#__PURE__*/React.forwardRef(({\n  closeLabel = 'Close',\n  closeVariant,\n  closeButton = false,\n  onHide,\n  children,\n  ...props\n}, ref) => {\n  const context = useContext(ModalContext);\n  const handleClick = useEventCallback(() => {\n    context == null ? void 0 : context.onHide();\n    onHide == null ? void 0 : onHide();\n  });\n  return /*#__PURE__*/_jsxs(\"div\", {\n    ref: ref,\n    ...props,\n    children: [children, closeButton && /*#__PURE__*/_jsx(CloseButton, {\n      \"aria-label\": closeLabel,\n      variant: closeVariant,\n      onClick: handleClick\n    })]\n  });\n});\nexport default AbstractModalHeader;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AbstractModalHeader from './AbstractModalHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  closeLabel = 'Close',\n  closeButton = false,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-header');\n  return /*#__PURE__*/_jsx(AbstractModalHeader, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsPrefix),\n    closeLabel: closeLabel,\n    closeButton: closeButton\n  });\n});\nModalHeader.displayName = 'ModalHeader';\nexport default ModalHeader;","import * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default (className => /*#__PURE__*/React.forwardRef((p, ref) => /*#__PURE__*/_jsx(\"div\", {\n  ...p,\n  ref: ref,\n  className: classNames(p.className, className)\n})));","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport divWithClassName from './divWithClassName';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH4 = divWithClassName('h4');\nconst ModalTitle = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = DivStyledAsH4,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-title');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nModalTitle.displayName = 'ModalTitle';\nexport default ModalTitle;","\"use client\";\n\nimport classNames from 'classnames';\nimport addEventListener from 'dom-helpers/addEventListener';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport ownerDocument from 'dom-helpers/ownerDocument';\nimport removeEventListener from 'dom-helpers/removeEventListener';\nimport getScrollbarSize from 'dom-helpers/scrollbarSize';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport transitionEnd from 'dom-helpers/transitionEnd';\nimport * as React from 'react';\nimport { useCallback, useMemo, useRef, useState } from 'react';\nimport BaseModal from '@restart/ui/Modal';\nimport { getSharedManager } from './BootstrapModalManager';\nimport Fade from './Fade';\nimport ModalBody from './ModalBody';\nimport ModalContext from './ModalContext';\nimport ModalDialog from './ModalDialog';\nimport ModalFooter from './ModalFooter';\nimport ModalHeader from './ModalHeader';\nimport ModalTitle from './ModalTitle';\nimport { useBootstrapPrefix, useIsRTL } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/* eslint-disable no-use-before-define, react/no-multi-comp */\nfunction DialogTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, {\n    ...props,\n    timeout: null\n  });\n}\nfunction BackdropTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, {\n    ...props,\n    timeout: null\n  });\n}\n\n/* eslint-enable no-use-before-define */\nconst Modal = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  style,\n  dialogClassName,\n  contentClassName,\n  children,\n  dialogAs: Dialog = ModalDialog,\n  'data-bs-theme': dataBsTheme,\n  'aria-labelledby': ariaLabelledby,\n  'aria-describedby': ariaDescribedby,\n  'aria-label': ariaLabel,\n  /* BaseModal props */\n\n  show = false,\n  animation = true,\n  backdrop = true,\n  keyboard = true,\n  onEscapeKeyDown,\n  onShow,\n  onHide,\n  container,\n  autoFocus = true,\n  enforceFocus = true,\n  restoreFocus = true,\n  restoreFocusOptions,\n  onEntered,\n  onExit,\n  onExiting,\n  onEnter,\n  onEntering,\n  onExited,\n  backdropClassName,\n  manager: propsManager,\n  ...props\n}, ref) => {\n  const [modalStyle, setStyle] = useState({});\n  const [animateStaticModal, setAnimateStaticModal] = useState(false);\n  const waitingForMouseUpRef = useRef(false);\n  const ignoreBackdropClickRef = useRef(false);\n  const removeStaticModalAnimationRef = useRef(null);\n  const [modal, setModalRef] = useCallbackRef();\n  const mergedRef = useMergedRefs(ref, setModalRef);\n  const handleHide = useEventCallback(onHide);\n  const isRTL = useIsRTL();\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const modalContext = useMemo(() => ({\n    onHide: handleHide\n  }), [handleHide]);\n  function getModalManager() {\n    if (propsManager) return propsManager;\n    return getSharedManager({\n      isRTL\n    });\n  }\n  function updateDialogStyle(node) {\n    if (!canUseDOM) return;\n    const containerIsOverflowing = getModalManager().getScrollbarWidth() > 0;\n    const modalIsOverflowing = node.scrollHeight > ownerDocument(node).documentElement.clientHeight;\n    setStyle({\n      paddingRight: containerIsOverflowing && !modalIsOverflowing ? getScrollbarSize() : undefined,\n      paddingLeft: !containerIsOverflowing && modalIsOverflowing ? getScrollbarSize() : undefined\n    });\n  }\n  const handleWindowResize = useEventCallback(() => {\n    if (modal) {\n      updateDialogStyle(modal.dialog);\n    }\n  });\n  useWillUnmount(() => {\n    removeEventListener(window, 'resize', handleWindowResize);\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n  });\n\n  // We prevent the modal from closing during a drag by detecting where the\n  // click originates from. If it starts in the modal and then ends outside\n  // don't close.\n  const handleDialogMouseDown = () => {\n    waitingForMouseUpRef.current = true;\n  };\n  const handleMouseUp = e => {\n    if (waitingForMouseUpRef.current && modal && e.target === modal.dialog) {\n      ignoreBackdropClickRef.current = true;\n    }\n    waitingForMouseUpRef.current = false;\n  };\n  const handleStaticModalAnimation = () => {\n    setAnimateStaticModal(true);\n    removeStaticModalAnimationRef.current = transitionEnd(modal.dialog, () => {\n      setAnimateStaticModal(false);\n    });\n  };\n  const handleStaticBackdropClick = e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n    handleStaticModalAnimation();\n  };\n  const handleClick = e => {\n    if (backdrop === 'static') {\n      handleStaticBackdropClick(e);\n      return;\n    }\n    if (ignoreBackdropClickRef.current || e.target !== e.currentTarget) {\n      ignoreBackdropClickRef.current = false;\n      return;\n    }\n    onHide == null ? void 0 : onHide();\n  };\n  const handleEscapeKeyDown = e => {\n    if (keyboard) {\n      onEscapeKeyDown == null ? void 0 : onEscapeKeyDown(e);\n    } else {\n      // Call preventDefault to stop modal from closing in @restart/ui.\n      e.preventDefault();\n      if (backdrop === 'static') {\n        // Play static modal animation.\n        handleStaticModalAnimation();\n      }\n    }\n  };\n  const handleEnter = (node, isAppearing) => {\n    if (node) {\n      updateDialogStyle(node);\n    }\n    onEnter == null ? void 0 : onEnter(node, isAppearing);\n  };\n  const handleExit = node => {\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n    onExit == null ? void 0 : onExit(node);\n  };\n  const handleEntering = (node, isAppearing) => {\n    onEntering == null ? void 0 : onEntering(node, isAppearing);\n\n    // FIXME: This should work even when animation is disabled.\n    addEventListener(window, 'resize', handleWindowResize);\n  };\n  const handleExited = node => {\n    if (node) node.style.display = ''; // RHL removes it sometimes\n    onExited == null ? void 0 : onExited(node);\n\n    // FIXME: This should work even when animation is disabled.\n    removeEventListener(window, 'resize', handleWindowResize);\n  };\n  const renderBackdrop = useCallback(backdropProps => /*#__PURE__*/_jsx(\"div\", {\n    ...backdropProps,\n    className: classNames(`${bsPrefix}-backdrop`, backdropClassName, !animation && 'show')\n  }), [animation, backdropClassName, bsPrefix]);\n  const baseModalStyle = {\n    ...style,\n    ...modalStyle\n  };\n\n  // If `display` is not set to block, autoFocus inside the modal fails\n  // https://github.com/react-bootstrap/react-bootstrap/issues/5102\n  baseModalStyle.display = 'block';\n  const renderDialog = dialogProps => /*#__PURE__*/_jsx(\"div\", {\n    role: \"dialog\",\n    ...dialogProps,\n    style: baseModalStyle,\n    className: classNames(className, bsPrefix, animateStaticModal && `${bsPrefix}-static`, !animation && 'show'),\n    onClick: backdrop ? handleClick : undefined,\n    onMouseUp: handleMouseUp,\n    \"data-bs-theme\": dataBsTheme,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledby,\n    \"aria-describedby\": ariaDescribedby,\n    children: /*#__PURE__*/_jsx(Dialog, {\n      ...props,\n      onMouseDown: handleDialogMouseDown,\n      className: dialogClassName,\n      contentClassName: contentClassName,\n      children: children\n    })\n  });\n  return /*#__PURE__*/_jsx(ModalContext.Provider, {\n    value: modalContext,\n    children: /*#__PURE__*/_jsx(BaseModal, {\n      show: show,\n      ref: mergedRef,\n      backdrop: backdrop,\n      container: container,\n      keyboard: true // Always set true - see handleEscapeKeyDown\n      ,\n      autoFocus: autoFocus,\n      enforceFocus: enforceFocus,\n      restoreFocus: restoreFocus,\n      restoreFocusOptions: restoreFocusOptions,\n      onEscapeKeyDown: handleEscapeKeyDown,\n      onShow: onShow,\n      onHide: onHide,\n      onEnter: handleEnter,\n      onEntering: handleEntering,\n      onEntered: onEntered,\n      onExit: handleExit,\n      onExiting: onExiting,\n      onExited: handleExited,\n      manager: getModalManager(),\n      transition: animation ? DialogTransition : undefined,\n      backdropTransition: animation ? BackdropTransition : undefined,\n      renderBackdrop: renderBackdrop,\n      renderDialog: renderDialog\n    })\n  });\n});\nModal.displayName = 'Modal';\nexport default Object.assign(Modal, {\n  Body: ModalBody,\n  Header: ModalHeader,\n  Title: ModalTitle,\n  Footer: ModalFooter,\n  Dialog: ModalDialog,\n  TRANSITION_DURATION: 300,\n  BACKDROP_TRANSITION_DURATION: 150\n});","import { useState } from 'react';\n\n/**\n * A convenience hook around `useState` designed to be paired with\n * the component [callback ref](https://reactjs.org/docs/refs-and-the-dom.html#callback-refs) api.\n * Callback refs are useful over `useRef()` when you need to respond to the ref being set\n * instead of lazily accessing it in an effect.\n *\n * ```ts\n * const [element, attachRef] = useCallbackRef<HTMLDivElement>()\n *\n * useEffect(() => {\n *   if (!element) return\n *\n *   const calendar = new FullCalendar.Calendar(element)\n *\n *   return () => {\n *     calendar.destroy()\n *   }\n * }, [element])\n *\n * return <div ref={attachRef} />\n * ```\n *\n * @category refs\n */\nexport default function useCallbackRef() {\n  return useState(null);\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","/**\n * @module ol/console\n */\n\n/**\n * @typedef {'info'|'warn'|'error'|'none'} Level\n */\n\n/**\n * @type {Object<Level, number>}\n */\nconst levels = {\n  info: 1,\n  warn: 2,\n  error: 3,\n  none: 4,\n};\n\n/**\n * @type {number}\n */\nlet level = levels.info;\n\n/**\n * Set the logging level.  By default, the level is set to 'info' and all\n * messages will be logged.  Set to 'warn' to only display warnings and errors.\n * Set to 'error' to only display errors.  Set to 'none' to silence all messages.\n *\n * @param {Level} l The new level.\n */\nexport function setLevel(l) {\n  level = levels[l];\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function log(...args) {\n  if (level > levels.info) {\n    return;\n  }\n  console.log(...args); // eslint-disable-line no-console\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function warn(...args) {\n  if (level > levels.warn) {\n    return;\n  }\n  console.warn(...args); // eslint-disable-line no-console\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function error(...args) {\n  if (level > levels.error) {\n    return;\n  }\n  console.error(...args); // eslint-disable-line no-console\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo, toFixed} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an `xy`, `xyz` or `xyzm` coordinate.\n * Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY();\n *     const out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY(2);\n *     const out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const decimals = fractionDigits || 0;\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = toFixed(x - deg * 3600 - min * 60, decimals);\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  let hdms = deg + '\\u00b0';\n  if (min !== 0 || sec !== 0) {\n    hdms += ' ' + padNumber(min, 2) + '\\u2032';\n  }\n  if (sec !== 0) {\n    hdms += ' ' + padNumber(sec, 2, decimals) + '\\u2033';\n  }\n  if (normalizedDegrees !== 0) {\n    hdms += ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0);\n  }\n\n  return hdms;\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(fractionDigits));\n  }\n  return '';\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], fractionDigits)\n    );\n  }\n  return '';\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, fractionDigits) {\n  return format(coordinate, '{x}, {y}', fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    sourceExtentWidth = sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth,\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/extent\n */\nimport Relationship from './extent/Relationship.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Extent corner.\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} Corner\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [dest] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, dest) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, dest);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, dest) {\n  if (dest) {\n    dest[0] = extent[0] - value;\n    dest[1] = extent[1] - value;\n    dest[2] = extent[2] + value;\n    dest[3] = extent[3] + value;\n    return dest;\n  }\n  return [\n    extent[0] - value,\n    extent[1] - value,\n    extent[2] + value,\n    extent[3] + value,\n  ];\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [dest] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent.slice();\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, dest) {\n  if (dest) {\n    dest[0] = minX;\n    dest[1] = minY;\n    dest[2] = maxX;\n    dest[3] = maxY;\n    return dest;\n  }\n  return [minX, minY, maxX, maxY];\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(dest) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, dest);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, dest) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, dest);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  dest,\n) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === 'bottom-left') {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === 'bottom-right') {\n    coordinate = getBottomRight(extent);\n  } else if (corner === 'top-left') {\n    coordinate = getTopLeft(extent);\n  } else if (corner === 'top-right') {\n    coordinate = getTopRight(extent);\n  } else {\n    throw new Error('Invalid corner');\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, dest) {\n  const [x0, y0, x1, y1, x2, y2, x3, y3] = getRotatedViewport(\n    center,\n    resolution,\n    rotation,\n    size,\n  );\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    dest,\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @return {Array<number>} Linear ring representing the viewport.\n */\nexport function getRotatedViewport(center, resolution, rotation, size) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  return [\n    x - xCos + ySin,\n    y - xSin - yCos,\n    x - xCos - ySin,\n    y - xSin + yCos,\n    x + xCos - ySin,\n    y + xSin + yCos,\n    x + xCos + ySin,\n    y + xSin - yCos,\n    x - xCos + ySin,\n    y - xSin - yCos,\n  ];\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [dest] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, dest) {\n  const intersection = dest ? dest : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [dest] Destination extent.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, dest, stops) {\n  if (isEmpty(extent)) {\n    return createOrUpdateEmpty(dest);\n  }\n  let coordinates = [];\n  if (stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / stops,\n        extent[2] - (width * i) / stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / stops,\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, dest);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth,\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n\n/**\n * Fits the extent to the real world\n *\n * If the extent does not cross the anti meridian, this will return the extent in an array\n * If the extent crosses the anti meridian, the extent will be sliced, so each part fits within the\n * real world\n *\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Array<Extent>} The extent within the real world extent.\n */\nexport function wrapAndSliceX(extent, projection) {\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n\n    if (!isFinite(extent[0]) || !isFinite(extent[2])) {\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n\n    wrapX(extent, projection);\n    const worldWidth = getWidth(projectionExtent);\n\n    if (getWidth(extent) > worldWidth) {\n      // the extent wraps around on itself\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n    if (extent[0] < projectionExtent[0]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0] + worldWidth, extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2], extent[3]],\n      ];\n    }\n    if (extent[2] > projectionExtent[2]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0], extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2] - worldWidth, extent[3]],\n      ];\n    }\n  }\n\n  return [extent];\n}\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>|null} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * @typedef {'radians' | 'degrees' | 'ft' | 'm' | 'pixels' | 'tile-pixels' | 'us-ft'} Units\n * Projection units.\n */\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': 'm',\n  '9002': 'ft',\n  '9003': 'us-ft',\n  '9101': 'radians',\n  '9102': 'degrees',\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * @typedef {Object} MetersPerUnitLookup\n * @property {number} radians Radians\n * @property {number} degrees Degrees\n * @property {number} ft  Feet\n * @property {number} m Meters\n * @property {number} us-ft US feet\n */\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {MetersPerUnitLookup}\n * @api\n */\nexport const METERS_PER_UNIT = {\n  // use the radius of the Normal sphere\n  'radians': 6370997 / (2 * Math.PI),\n  'degrees': (2 * Math.PI * 6370997) / 360,\n  'ft': 0.3048,\n  'm': 1,\n  'us-ft': 1200 / 3937,\n};\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").Units} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").Units}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").Units} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").Units} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: 'm',\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / Math.cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [axisOrientation] Axis orientation.\n   */\n  constructor(code, axisOrientation) {\n    super({\n      code: code,\n      units: 'degrees',\n      extent: EXTENT,\n      axisOrientation: axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/sphere\n */\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint': {\n      break;\n    }\n    case 'LineString':\n    case 'LinearRing': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case 'MultiLineString':\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n    case 'LinearRing': {\n      break;\n    }\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing),\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat),\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {getDistance} from './sphere.js';\nimport {warn} from './console.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [disable = true] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(disable) {\n  const hide = disable === undefined ? true : disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, output) {\n  if (output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    output = output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, output) {\n  if (output !== undefined && input !== output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    input = output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").Units} [units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (units && units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[units];\n      }\n    }\n  } else {\n    const projUnits = projection.getUnits();\n    if ((projUnits == 'degrees' && !units) || units == 'degrees') {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326'),\n      );\n      if (toEPSG4326 === identityTransform && projUnits !== 'degrees') {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = units\n        ? METERS_PER_UNIT[units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform,\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  }\n  if (typeof projection === 'string') {\n    return get(projection);\n  }\n  return /** @type {Projection} */ (projection);\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [output] Output.\n     * @param {number} [dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, output, dimension) {\n      const length = input.length;\n      dimension = dimension !== undefined ? dimension : 2;\n      output = output !== undefined ? output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform(input.slice(i, i + dimension));\n        const pointLength = point.length;\n        for (let j = 0, jj = dimension; j < jj; ++j) {\n          output[i + j] = j >= pointLength ? input[i + j] : point[j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}. If the transform function can only\n *     transform less dimensions than the input coordinate, it is supposeed to return a coordinate\n *     with only the length it can transform. The other dimensions will be taken unchanged from the\n *     source.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward),\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse),\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    projection !== undefined ? projection : 'EPSG:3857',\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, projection) {\n  const lonLat = transform(\n    coordinate,\n    projection !== undefined ? projection : 'EPSG:3857',\n    'EPSG:4326',\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  }\n  const transformFunc = getTransformFromProjections(projection1, projection2);\n  return transformFunc === cloneTransform && equalUnits;\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection,\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection,\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection,\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.',\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceMetersPerUnit = get(sourceProjection).getMetersPerUnit();\n  const userMetersPerUnit = userProjection.getMetersPerUnit();\n  return sourceMetersPerUnit && userMetersPerUnit\n    ? (resolution * sourceMetersPerUnit) / userMetersPerUnit\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const destMetersPerUnit = get(destProjection).getMetersPerUnit();\n  const userMetersPerUnit = userProjection.getMetersPerUnit();\n  return destMetersPerUnit && userMetersPerUnit\n    ? (resolution * userMetersPerUnit) / destMetersPerUnit\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destination).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destination).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      coord = coord.slice(0);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        coord[0] = coord[0] - worldsAway * sourceExtentWidth;\n      }\n      coord[0] = clamp(coord[0], sourceExtent[0], sourceExtent[2]);\n      coord[1] = clamp(coord[1], sourceExtent[1], sourceExtent[3]);\n      transformed = transform(coord);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326,\n  );\n}\n\naddCommon();\n"],"names":["window","document","createElement","optionsSupported","onceSupported","options","passive","once","canUseDOM","addEventListener","removeEventListener","e","node","eventName","handler","capture","wrappedHandler","__once","onceHandler","event","this","call","ownerDocument","size","scrollbarSize","recalc","scrollDiv","style","position","top","width","height","overflow","body","appendChild","offsetWidth","clientWidth","removeChild","value","ref","useRef","useEffect","current","useEventCallback","fn","useCommittedRef","useCallback","apply","arguments","toFnRef","refA","refB","useMemo","a","b","mergeRefs","useWillUnmount","onUnmount","valueRef","useUpdatedRef","getComputedStyle","psuedoElement","doc","defaultView","ownerWindow","rUpper","msPattern","hyphenateStyleName","string","replace","toLowerCase","hyphenate","supportedTransforms","property","css","transforms","getPropertyValue","Object","keys","forEach","key","test","isTransform","removeProperty","cssText","emulateTransitionEnd","element","duration","padding","called","handle","setTimeout","bubbles","cancelable","createEvent","initEvent","dispatchEvent","triggerEvent","remove","listen","clearTimeout","transitionEnd","str","mult","indexOf","parseFloat","parseDuration","removeEmulate","activeElement","active","nodeName","contains","context","compareDocumentPosition","OPEN_DATA_ATTRIBUTE","concat","ModalManager","_ref","length","undefined","_ref$handleContainerO","handleContainerOverflow","_ref$isRTL","isRTL","_classCallCheck","modals","_createClass","Math","abs","innerWidth","documentElement","getBodyScrollbarWidth","_modal","containerState","paddingProp","container","getElement","_defineProperty","scrollBarWidth","parseInt","setAttribute","_this","_toConsumableArray","m","removeAttribute","assign","modal","modalIdx","push","setModalAttributes","state","getScrollbarWidth","setContainerStyle","splice","removeContainerStyle","removeModalAttributes","Context","createContext","Provider","useWindow","useContext","resolveContainerRef","getBoundingClientRect","isReactNative","global","navigator","product","useLayoutEffect","children","inProp","in","onExited","mountOnEnter","unmountOnExit","hasEnteredRef","handleExited","combinedRef","useMergedRefs","child","cloneElement","ImperativeTransition","_ref2","onEntered","transition","_useState","useState","_useState2","_slicedToArray","exited","setExited","onTransition","isInitialRef","handleTransition","useIsomorphicEffect","stale","initial","isStale","useTransition","Promise","resolve","then","error","renderTransition","Component","runTransition","props","_jsx","NoopTransition","manager","_excluded","useModalManager","provided","modalManager","getManager","dialog","backdrop","add","isTopModal","setDialogRef","setBackdropRef","Modal","forwardRef","_ref$show","show","_ref$role","role","className","_ref$backdrop","_ref$keyboard","keyboard","onBackdropClick","onEscapeKeyDown","backdropTransition","runBackdropTransition","_ref$autoFocus","autoFocus","_ref$enforceFocus","enforceFocus","_ref$restoreFocus","restoreFocus","restoreFocusOptions","renderDialog","_ref$renderBackdrop","renderBackdrop","providedManager","containerRef","onShow","_ref$onHide","onHide","onExit","onExiting","onEnter","onEntering","rest","source","excluded","i","target","sourceKeys","_objectWithoutPropertiesLoose","onResolved","resolvedRef","setRef","earlyRef","nextRef","useWaitForDOMRef","isMounted","mounted","useMounted","prevShow","usePrevious","lastFocusRef","useImperativeHandle","handleShow","removeKeydownListenerRef","handleDocumentKeyDown","removeFocusListenerRef","handleEnforceFocus","_modal$dialog$ownerDo","_modal$dialog","currentActiveElement","focus","handleHide","_lastFocusRef$current","handleBackdropClick","currentTarget","code","keyCode","isEscKey","defaultPrevented","dialogProps","tabIndex","React","appear","backdropElement","onClick","_Fragment","ReactDOM","_jsxs","displayName","Manager","toArray","Function","prototype","bind","slice","qsa","selector","querySelectorAll","replaceClassName","origClass","classToRemove","RegExp","sharedManager","Selector","BootstrapModalManager","_ModalManager","_inherits","_super","_createSuper","prop","adjust","actual","dataset","_get","_getPrototypeOf","classList","baseVal","hasClass","marginProp","el","adjustAndStore","_this2","restore","transitionEndListener","delay","addEndListener","childRef","_objectWithoutProperties","nodeRef","mergedRef","attachRef","r","componentOrElement","normalize","callback","param","handleEnter","handleEntering","handleEntered","handleExit","handleExiting","handleAddEndListener","Transition","_objectSpread","status","innerProps","fadeStyles","_fadeStyles","ENTERING","ENTERED","Fade","_ref$transitionClasse","transitionClasses","timeout","isAppearing","offsetHeight","triggerBrowserReflow","TransitionWrapper","classNames","ModalBody","bsPrefix","_ref$as","as","useBootstrapPrefix","ModalDialog","contentClassName","centered","fullscreen","scrollable","dialogClass","fullScreenClass","ModalFooter","propTypes","PropTypes","variant","CloseButton","_ref$ariaLabel","ariaLabel","type","_ref$closeLabel","closeLabel","closeVariant","_ref$closeButton","closeButton","ModalContext","handleClick","ModalHeader","AbstractModalHeader","DivStyledAsH4","p","ModalTitle","DialogTransition","BackdropTransition","dialogClassName","_ref$dialogAs","dialogAs","Dialog","dataBsTheme","ariaLabelledby","ariaDescribedby","_ref$animation","animation","backdropClassName","propsManager","modalStyle","setStyle","_useState3","_useState4","animateStaticModal","setAnimateStaticModal","waitingForMouseUpRef","ignoreBackdropClickRef","removeStaticModalAnimationRef","_useCallbackRef","_useCallbackRef2","setModalRef","useIsRTL","modalContext","getModalManager","getSharedManager","updateDialogStyle","containerIsOverflowing","modalIsOverflowing","scrollHeight","clientHeight","paddingRight","getScrollbarSize","paddingLeft","handleWindowResize","handleDialogMouseDown","handleMouseUp","handleStaticModalAnimation","handleStaticBackdropClick","backdropProps","baseModalStyle","display","BaseModal","preventDefault","onMouseUp","onMouseDown","Body","Header","Title","Footer","TRANSITION_DURATION","BACKDROP_TRANSITION_DURATION","Reflect","get","receiver","base","object","hasOwnProperty","getPrototypeOf","desc","getOwnPropertyDescriptor","levels","info","warn","none","level","_console2","console","coordinate","delta","equals","coordinate1","coordinate2","rotate","angle","cosAngle","cos","sinAngle","sin","x","y","scale","wrapX","projection","canWrapX","worldWidth","getWidth","getExtent","worldsAway","sourceExtentWidth","projectionExtent","floor","getWorldsAway","UNKNOWN","INTERSECTING","ABOVE","RIGHT","BELOW","LEFT","boundingExtent","coordinates","extent","createEmpty","ii","extendCoordinate","clone","dest","closestSquaredDistanceXY","dx","dy","containsCoordinate","containsXY","containsExtent","extent1","extent2","coordinateRelationship","minX","minY","maxX","maxY","relationship","Relationship","Infinity","createOrUpdate","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromFlatCoordinates","flatCoordinates","offset","end","stride","extendFlatCoordinates","extend","extendXY","min","max","forEachCorner","val","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","area","isEmpty","getHeight","getCenter","getCorner","corner","Error","getForViewAndSize","center","resolution","rotation","_getRotatedViewport","getRotatedViewport","_getRotatedViewport2","x0","y0","x1","y1","x2","y2","x3","y3","cosRotation","sinRotation","xCos","xSin","yCos","ySin","getIntersection","intersection","intersects","returnOrUpdate","intersectsSegment","start","startRel","endRel","startX","startY","endX","endY","slope","applyTransform","transformFn","stops","xs","ys","l","_boundingExtentXYs","clamp","squaredSegmentDistance","t","squaredDistance","solveLinearSystem","mat","n","maxRow","maxEl","absValue","tmp","j","coef","k","Array","toRadians","angleInDegrees","PI","modulo","lerp","toFixed","decimals","factor","pow","round","ceil","METERS_PER_UNIT","Projection","code_","units_","units","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","tileGrid","func","RADIUS","HALF_SIZE","EXTENT","WORLD_EXTENT","MAX_SAFE_Y","log","tan","EPSG3857Projection","_Projection","point","cosh","PROJECTIONS","fromEPSG4326","input","output","dimension","toEPSG4326","atan","exp","EPSG4326Projection","cache","destination","sourceCode","getCode","destinationCode","DEFAULT_RADIUS","getDistance","c1","c2","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","sqrt","showCoordinateWarning","disableCoordinateWarning","disable","cloneTransform","identityTransform","addProjection","addProj","addTransformFunc","projectionLike","pointResolution","getter","getPointResolutionFunc","getUnits","getMetersPerUnit","projUnits","getTransformFromProjections","vertices","addEquivalentProjections","projections","addProjections","createProjection","defaultCode","fromLonLat","transform","equivalent","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","getTransformFunc","getTransform","transformExtent","userProjection","getUserProjection","toUserCoordinate","fromUserCoordinate","destProjection","toUserExtent","fromUserExtent","projections2","forwardTransform","inverseTransform","EPSG3857_PROJECTIONS","EPSG4326_PROJECTIONS","addCommon"],"sourceRoot":""}